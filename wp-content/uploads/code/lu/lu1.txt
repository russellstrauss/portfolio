DecimalFormat fmt = new DecimalFormat("0.####");
 
Scanner scan = new Scanner (System.in);
System.out.println("In an nxn Hilbert matrix, how many dimensions?");
int n = scan.nextInt();
System.out.println();
double[][] Hilbert = new double[n][n];
double[][] HCopy = new double[n][n];
 
System.out.println("Number of rows and columns in our original Hilbert matrix: " + n + " x " + n + ".");
System.out.println("Note: Only displaying four decimal places for organization, but no accuracy is lost.");
System.out.println();       
 
 
// Construction of the Hilbert Matrix, our starting point:
System.out.println("The starting Hilbert matrix:");
System.out.println();
for (int i=0; i<n; i++) {           
    System.out.print("[ ");
    for (int j=0; j<n; j++) {
        double Hij = (1/(((double)i+1)+((double)j+1)-1));
        Hilbert[i][j] = Hij;
        HCopy[i][j] = Hij;
        fmt.setMinimumFractionDigits(4);
        System.out.print("{");
        System.out.print(fmt.format(Hilbert[i][j]));
        System.out.print("} ");
    }           
    System.out.print("]");
    System.out.println();   
     
}